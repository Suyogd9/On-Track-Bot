---
- name: Clone and run the bot on VCL
  hosts: localhost
  environment:
    # Put all the required environment variables in the environment

    # Bot token for Mattermost
    BOTTOKEN: "{{ BOTTOKEN }}"

    # PostgreSQL creds
    pgsqluser: "{{ pgsqluser }}"
    pgsqlpwd: "{{ pgsqlpwd }}"
    portno: "{{ portno }}"
    pgsqlhost: "{{ pgsqlhost }}"
    pgsqldb: "{{ pgsqldb }}"

  become: yes
  vars:
      clone_path: /home/ontrack
  tasks:

    # https://kyle.pericak.com/nodejs-ansible.html
    # https://computingforgeeks.com/install-node-js-14-on-ubuntu-debian-linux/
    - name: Add node repo
      shell: curl -sL https://deb.nodesource.com/setup_14.x | sudo bash -
      args:
        warn: false

    - name: "Add nodejs apt key"
      apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present

    - name: "Add nodejs 14.x ppa for apt repo"
      apt_repository:
        # https://packages.ubuntu.com/
        repo: deb https://deb.nodesource.com/node_14.x focal main
        update_cache: yes

    - name: "Install nodejs"
      apt:
        update_cache: yes
        name: nodejs
        state: present

    - name: Update npm
      npm:
        name: npm
        version: 8.3.0
        global: true

    - name: Clone repository
      git:
        repo: "https://{{ GITHUB_TOKEN }}@github.ncsu.edu/csc510-s2022/CSC510-4.git"
        dest: "{{ clone_path }}"
        force: yes
        update: no

    - name: Install npm packages
      community.general.npm:
        path: "{{ clone_path }}"
        state: present

    - name: Install forever globally
      community.general.npm:
        name: forever
        global: yes
        state: present
    
    # https://computingforgeeks.com/how-to-manage-postgresql-database-with-ansible/
    - name: Install postgresql
      apt:
        name: postgresql=12+214ubuntu0.1
        state: present 

    # Install postgresql required python packages
    # https://citizix.com/how-to-use-ansible-to-install-and-configure-postgres-14-on-ubuntu-20-04/
    - name: "Install Python packages"
      apt:
        name: python3-psycopg2
        state: latest

    - name: Add postgres access
      community.postgresql.postgresql_pg_hba:
        dest: /etc/postgresql/12/main/pg_hba.conf
        users: postgres
        method: trust
        contype: local
        source: local

    - name: Start postgresql service
      service:
        name: postgresql
        state: restarted

    - name: Create a new database 
      community.postgresql.postgresql_db:
        name: "{{ pgsqldb }}"
        port: "{{ portno }}"


    - name: Create postgresql user creds 
      become: yes
      community.postgresql.postgresql_user:
        db: "{{ pgsqldb }}"
        name: "{{ pgsqluser }}"
        password: "{{ pgsqlpwd }}"
        port: "{{ portno }}"
        priv: ALL

    - name: Add user access
      community.postgresql.postgresql_pg_hba:
        dest: /etc/postgresql/12/main/pg_hba.conf
        users: "{{ pgsqluser }}"
        method: password
        contype: local
        source: local

    - name: Start postgresql service
      service:
        name: postgresql
        state: restarted

    - name: Create table
      community.postgresql.postgresql_table:
        login_user: postgres
        db: "{{ pgsqldb }}"
        name: bot
        columns:
          - userid varchar(40)
          - useremail varchar(40)
          - activeboardid varchar(100)
          - usertoken varchar(100)
          - userkey varchar(100)

    - name: Add access to table
      community.postgresql.postgresql_privs:
        database: "{{ pgsqldb }}"
        state: present
        roles: "{{ item }}"
        privs: ALL
        objs: bot
      with_items:
        - postgres
        - "{{ pgsqluser }}"

    
    - name: Stop existing forever processes
      become: no
      command:
        cmd: forever stopall

    - name: Start OnTrack back
      become: no
      command:
         chdir: "{{ clone_path }}"
         cmd: forever start index.js 

    
